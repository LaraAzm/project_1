[
  {
    "objectID": "project1.html",
    "href": "project1.html",
    "title": "Project 1: Data combination and summarization through functions",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readr)\nlibrary(readxl)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor"
  },
  {
    "objectID": "project1.html#library-read-in",
    "href": "project1.html#library-read-in",
    "title": "Project 1: Data combination and summarization through functions",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readr)\nlibrary(readxl)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor"
  },
  {
    "objectID": "project1.html#data-processing",
    "href": "project1.html#data-processing",
    "title": "Project 1: Data combination and summarization through functions",
    "section": "Data processing",
    "text": "Data processing\n\nStep 1: Read in the data\n\n#reading in data from data folder\nedu_data &lt;- read_csv(\"./data/EDU01a.csv\")\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010187N1, EDU010187N2, EDU010188N1, EDU010188...\ndbl (20): EDU010187F, EDU010187D, EDU010188F, EDU010188D, EDU010189F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#reading specs of table to get column names\nspec(edu_data)\n\ncols(\n  Area_name = col_character(),\n  STCOU = col_character(),\n  EDU010187F = col_double(),\n  EDU010187D = col_double(),\n  EDU010187N1 = col_character(),\n  EDU010187N2 = col_character(),\n  EDU010188F = col_double(),\n  EDU010188D = col_double(),\n  EDU010188N1 = col_character(),\n  EDU010188N2 = col_character(),\n  EDU010189F = col_double(),\n  EDU010189D = col_double(),\n  EDU010189N1 = col_character(),\n  EDU010189N2 = col_character(),\n  EDU010190F = col_double(),\n  EDU010190D = col_double(),\n  EDU010190N1 = col_character(),\n  EDU010190N2 = col_character(),\n  EDU010191F = col_double(),\n  EDU010191D = col_double(),\n  EDU010191N1 = col_character(),\n  EDU010191N2 = col_character(),\n  EDU010192F = col_double(),\n  EDU010192D = col_double(),\n  EDU010192N1 = col_character(),\n  EDU010192N2 = col_character(),\n  EDU010193F = col_double(),\n  EDU010193D = col_double(),\n  EDU010193N1 = col_character(),\n  EDU010193N2 = col_character(),\n  EDU010194F = col_double(),\n  EDU010194D = col_double(),\n  EDU010194N1 = col_character(),\n  EDU010194N2 = col_character(),\n  EDU010195F = col_double(),\n  EDU010195D = col_double(),\n  EDU010195N1 = col_character(),\n  EDU010195N2 = col_character(),\n  EDU010196F = col_double(),\n  EDU010196D = col_double(),\n  EDU010196N1 = col_character(),\n  EDU010196N2 = col_character()\n)\n\n\n\n\nStep 2: Select only the Area_name (rename as area_name), STCOU and any columns that ends in “D”\n\n#saving edits as a new object\nedu_edit &lt;- edu_data |&gt;\n  #selecting only area_name, STCOU, and the columns that end with \"D\"\n  select(Area_name, STCOU, ends_with(\"D\")) |&gt;\n  rename(\"area_name\" = \"Area_name\")\n\n\n\nStep 3: Converting to a long form\n\n  #converting to a long form and moving the results to an \"enrollment\" column\nedu_edit &lt;- edu_edit |&gt;\n  pivot_longer(cols = 3:12, \n               values_to = \"enrollment\")\n#printing to see the results\nedu_edit\n\n# A tibble: 31,980 × 4\n   area_name     STCOU name       enrollment\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt;\n 1 UNITED STATES 00000 EDU010187D   40024299\n 2 UNITED STATES 00000 EDU010188D   39967624\n 3 UNITED STATES 00000 EDU010189D   40317775\n 4 UNITED STATES 00000 EDU010190D   40737600\n 5 UNITED STATES 00000 EDU010191D   41385442\n 6 UNITED STATES 00000 EDU010192D   42088151\n 7 UNITED STATES 00000 EDU010193D   42724710\n 8 UNITED STATES 00000 EDU010194D   43369917\n 9 UNITED STATES 00000 EDU010195D   43993459\n10 UNITED STATES 00000 EDU010196D   44715737\n# ℹ 31,970 more rows\n\n\n\n\nStep 4: Converting year to numeric data and adding a column to represent measurement\n\n#overwriting the object to save edits\nedu_edit &lt;- edu_edit |&gt;\n  #changing the values to reflect years using the data information sheet\n  mutate( year = case_when(\n    name == \"EDU010187D\" ~ 1987, \n    name == \"EDU010188D\" ~ 1988, \n    name == \"EDU010189D\" ~ 1989, \n    name == \"EDU010190D\" ~ 1990, \n    name == \"EDU010191D\" ~ 1991, \n    name == \"EDU010192D\" ~ 1992, \n    name == \"EDU010193D\" ~ 1993, \n    name == \"EDU010194D\" ~ 1994, \n    name == \"EDU010195D\" ~ 1995, \n    name == \"EDU010196D\" ~ 1996\n  )) |&gt;\n  #creating a new column to represent which measurement grabbed\n  mutate(measurement = substr(edu_edit$name, 1, 7))\n\n#printing to see the results\nedu_edit\n\n# A tibble: 31,980 × 6\n   area_name     STCOU name       enrollment  year measurement\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 UNITED STATES 00000 EDU010187D   40024299  1987 EDU0101    \n 2 UNITED STATES 00000 EDU010188D   39967624  1988 EDU0101    \n 3 UNITED STATES 00000 EDU010189D   40317775  1989 EDU0101    \n 4 UNITED STATES 00000 EDU010190D   40737600  1990 EDU0101    \n 5 UNITED STATES 00000 EDU010191D   41385442  1991 EDU0101    \n 6 UNITED STATES 00000 EDU010192D   42088151  1992 EDU0101    \n 7 UNITED STATES 00000 EDU010193D   42724710  1993 EDU0101    \n 8 UNITED STATES 00000 EDU010194D   43369917  1994 EDU0101    \n 9 UNITED STATES 00000 EDU010195D   43993459  1995 EDU0101    \n10 UNITED STATES 00000 EDU010196D   44715737  1996 EDU0101    \n# ℹ 31,970 more rows\n\n\n\n\nStep 5: Creating a county data set with state variable\n\n#creating new data set with county level data \nedu_county &lt;- subset(edu_edit, grepl(pattern = \", \\\\w\\\\w\", edu_edit$area_name))\n\n#overwriting the county object to save edits \nedu_county &lt;- edu_county |&gt;\n  #adding a new column to represent county's state\n  mutate(state = str_extract(edu_county$area_name, \" \\\\w\\\\w\")) |&gt;\n  #adjusting columns to look better\n  select(area_name, state, STCOU, name, measurement, year, everything())\n\n#changing the class of the county data set\nclass(edu_county) &lt;- c(\"county\", class(edu_county))\n\n#printing the data set\nedu_county\n\n# A tibble: 31,450 × 7\n   area_name   state STCOU name       measurement  year enrollment\n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n 1 Autauga, AL \" AL\" 01001 EDU010187D EDU0101      1987       6829\n 2 Autauga, AL \" AL\" 01001 EDU010188D EDU0101      1988       6900\n 3 Autauga, AL \" AL\" 01001 EDU010189D EDU0101      1989       6920\n 4 Autauga, AL \" AL\" 01001 EDU010190D EDU0101      1990       6847\n 5 Autauga, AL \" AL\" 01001 EDU010191D EDU0101      1991       7008\n 6 Autauga, AL \" AL\" 01001 EDU010192D EDU0101      1992       7137\n 7 Autauga, AL \" AL\" 01001 EDU010193D EDU0101      1993       7152\n 8 Autauga, AL \" AL\" 01001 EDU010194D EDU0101      1994       7381\n 9 Autauga, AL \" AL\" 01001 EDU010195D EDU0101      1995       7568\n10 Autauga, AL \" AL\" 01001 EDU010196D EDU0101      1996       7834\n# ℹ 31,440 more rows\n\n\n\n\nStep 6: Creating a state data set with division variable\n\n#creating new data set with state level data\nedu_state &lt;- subset(edu_edit, !(grepl(pattern = \", \\\\w\\\\w\", edu_edit$area_name)))\n\n#adjusting area_name values to easily identify the region\nedu_state$area_name &lt;- str_to_title(edu_state$area_name)\n\n#adding new column to reflect division of the state\nedu_state$division &lt;- as.character(setNames(state.division, state.name)[edu_state$area_name])\n\n#overwriting the state object to save edits \nedu_state &lt;- edu_state |&gt;\n#fixing division data to reflect error condition and  \n    mutate(division = case_when(\n      \n     str_to_title(area_name) %in% c(\"Connecticut\", \"Maine\", \"Massachusetts\", \n                                    \"New Hampshire\", \"Rhode Island\", \"Vermont\") \n     ~ \"New England\",\n     \n    str_to_title(area_name) %in% c(\"New Jersey\", \"New York\", \"Pennsylvania\") \n    ~ \"Middle Atlantic\",\n    \n    str_to_title(area_name) %in% c(\"Illinois\", \"Indiana\", \"Michigan\", \"Ohio\", \n                                   \"Wisconsin\") \n    ~ \"East North Central\",\n    \n    str_to_title(area_name) %in% c(\"Iowa\", \"Kansas\", \"Minnesota\", \"Missouri\", \n                                   \"Nebraska\", \"North Dakota\", \"South Dakota\") \n    ~ \"West North Central\",\n    \n    str_to_title(area_name) %in% c(\"Delaware\", \"Florida\", \"Georgia\", \"Maryland\", \n                                   \"North Carolina\", \"South Carolina\", \"Virginia\", \n                                   \"District of Columbia\", \"West Virginia\")\n    ~ \"South Atlantic\",\n    \n    str_to_title(area_name) %in% c(\"Alabama\", \"Kentucky\", \"Mississippi\", \"Tennessee\") \n    ~ \"East South Central\",\n    \n    str_to_title(area_name) %in% c(\"Arkansas\", \"Louisiana\", \"Oklahoma\", \"Texas\") \n    ~ \"West South Central\",\n    \n    str_to_title(area_name) %in% c(\"Arizona\", \"Colorado\", \"Idaho\", \"Montana\",\n                                   \"Nevada\", \"New Mexico\", \"Utah\", \"Wyoming\")\n    ~ \"Mountain\",\n    \n    str_to_title(area_name) %in% c(\"Alaska\", \"California\", \"Hawaii\", \n                                   \"Oregon\", \"Washington\") \n    ~ \"Pacific\",\n    \n    is.na(division) ~ \"ERROR\"\n      )) |&gt;\n  #adjusting columns to look better\n  select(area_name, division, STCOU, everything())\n\n#printing the data set\nedu_state\n\n# A tibble: 530 × 7\n   area_name     division STCOU name       enrollment  year measurement\n   &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 United States ERROR    00000 EDU010187D   40024299  1987 EDU0101    \n 2 United States ERROR    00000 EDU010188D   39967624  1988 EDU0101    \n 3 United States ERROR    00000 EDU010189D   40317775  1989 EDU0101    \n 4 United States ERROR    00000 EDU010190D   40737600  1990 EDU0101    \n 5 United States ERROR    00000 EDU010191D   41385442  1991 EDU0101    \n 6 United States ERROR    00000 EDU010192D   42088151  1992 EDU0101    \n 7 United States ERROR    00000 EDU010193D   42724710  1993 EDU0101    \n 8 United States ERROR    00000 EDU010194D   43369917  1994 EDU0101    \n 9 United States ERROR    00000 EDU010195D   43993459  1995 EDU0101    \n10 United States ERROR    00000 EDU010196D   44715737  1996 EDU0101    \n# ℹ 520 more rows"
  },
  {
    "objectID": "project1.html#repeating-with-generic-functions",
    "href": "project1.html#repeating-with-generic-functions",
    "title": "Project 1: Data combination and summarization through functions",
    "section": "Repeating with generic functions",
    "text": "Repeating with generic functions\n\nReading in the second data set:\n\nedu_data_b &lt;- read_csv(\"./data/EDU01b.csv\")\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010197N1, EDU010197N2, EDU010198N1, EDU010198...\ndbl (20): EDU010197F, EDU010197D, EDU010198F, EDU010198D, EDU010199F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#reading specs of table to get column names\nspec(edu_data_b)\n\ncols(\n  Area_name = col_character(),\n  STCOU = col_character(),\n  EDU010197F = col_double(),\n  EDU010197D = col_double(),\n  EDU010197N1 = col_character(),\n  EDU010197N2 = col_character(),\n  EDU010198F = col_double(),\n  EDU010198D = col_double(),\n  EDU010198N1 = col_character(),\n  EDU010198N2 = col_character(),\n  EDU010199F = col_double(),\n  EDU010199D = col_double(),\n  EDU010199N1 = col_character(),\n  EDU010199N2 = col_character(),\n  EDU010200F = col_double(),\n  EDU010200D = col_double(),\n  EDU010200N1 = col_character(),\n  EDU010200N2 = col_character(),\n  EDU010201F = col_double(),\n  EDU010201D = col_double(),\n  EDU010201N1 = col_character(),\n  EDU010201N2 = col_character(),\n  EDU010202F = col_double(),\n  EDU010202D = col_double(),\n  EDU010202N1 = col_character(),\n  EDU010202N2 = col_character(),\n  EDU015203F = col_double(),\n  EDU015203D = col_double(),\n  EDU015203N1 = col_character(),\n  EDU015203N2 = col_character(),\n  EDU015204F = col_double(),\n  EDU015204D = col_double(),\n  EDU015204N1 = col_character(),\n  EDU015204N2 = col_character(),\n  EDU015205F = col_double(),\n  EDU015205D = col_double(),\n  EDU015205N1 = col_character(),\n  EDU015205N2 = col_character(),\n  EDU015206F = col_double(),\n  EDU015206D = col_double(),\n  EDU015206N1 = col_character(),\n  EDU015206N2 = col_character()\n)\n\n\n\n\nRepeating step 1 & 2 with option to specify name of value column\n\nsteps_1_and_2 &lt;- function(data, value = \"enrollment\"){\n\n# selecting the appropriate columns\n  selected_columns &lt;- data |&gt;\n       select(Area_name, STCOU, ends_with(\"D\")) |&gt;\n       rename(\"area_name\" = \"Area_name\") \n  \n# pivoting the data, 'value' is defaulted to enrollment but can be changed\n  pivoted_data &lt;- selected_columns |&gt; \n       pivot_longer(cols = 3:ncol(selected_columns), \n               values_to = value)\n  \n# returning the data \n  return(pivoted_data)\n}\n\n\n\nTesting the function\n\n# the \"value = \" tells r what to label the column that is being pivoted\nafter_step_2 &lt;- steps_1_and_2(data = edu_data_b, value = \"enrollment\")\nafter_step_2\n\n# A tibble: 31,980 × 4\n   area_name     STCOU name       enrollment\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt;\n 1 UNITED STATES 00000 EDU010197D   44534459\n 2 UNITED STATES 00000 EDU010198D   46245814\n 3 UNITED STATES 00000 EDU010199D   46368903\n 4 UNITED STATES 00000 EDU010200D   46818690\n 5 UNITED STATES 00000 EDU010201D   47127066\n 6 UNITED STATES 00000 EDU010202D   47606570\n 7 UNITED STATES 00000 EDU015203D   48506317\n 8 UNITED STATES 00000 EDU015204D   48693287\n 9 UNITED STATES 00000 EDU015205D   48978555\n10 UNITED STATES 00000 EDU015206D   49140702\n# ℹ 31,970 more rows\n\n\n\n\nWriting function for step 3:\n\nstep_3 &lt;- function(data){\n  \nedit &lt;- data |&gt;\n  #first we have to create a column corresponding to the last 2 digits\n   mutate(last_2_digits =  substr(name,8,9),\n  #then we will use logic to say if these are bigger than 24 the year must be in the 1900s\n         year = as.numeric(ifelse(last_2_digits &gt; 24, \n                       paste(\"19\",last_2_digits, sep = \"\"), \n                       paste(\"20\",last_2_digits, sep = \"\"))),\n         measurement = substr(data$name, 1, 7)) |&gt;\n  select(-last_2_digits)\nreturn(edit)\n}\n\n\n\nTesting function for step 3:\n\nafter_step_3 &lt;- step_3(data = after_step_2)\nafter_step_3\n\n# A tibble: 31,980 × 6\n   area_name     STCOU name       enrollment  year measurement\n   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 UNITED STATES 00000 EDU010197D   44534459  1997 EDU0101    \n 2 UNITED STATES 00000 EDU010198D   46245814  1998 EDU0101    \n 3 UNITED STATES 00000 EDU010199D   46368903  1999 EDU0101    \n 4 UNITED STATES 00000 EDU010200D   46818690  2000 EDU0102    \n 5 UNITED STATES 00000 EDU010201D   47127066  2001 EDU0102    \n 6 UNITED STATES 00000 EDU010202D   47606570  2002 EDU0102    \n 7 UNITED STATES 00000 EDU015203D   48506317  2003 EDU0152    \n 8 UNITED STATES 00000 EDU015204D   48693287  2004 EDU0152    \n 9 UNITED STATES 00000 EDU015205D   48978555  2005 EDU0152    \n10 UNITED STATES 00000 EDU015206D   49140702  2006 EDU0152    \n# ℹ 31,970 more rows\n\n\n\n\nWriting function for step 5:\n\n#after already having the county data\n\nstep_5 &lt;- function(data){\n  with_state &lt;- data |&gt;\n  mutate(state = substr(area_name, nchar(area_name) - 1,nchar(area_name))) |&gt;\n  #adjusting columns to look better\n  select(area_name, state, STCOU, everything())  \n  class(with_state) &lt;- c(\"county\", class(with_state))\n\n  return(with_state)\n}\n\n\n\nTesting step 5:\n\n#subsetting to work after step 4\ncounty_practice &lt;- subset(after_step_3, grepl(pattern = \", \\\\w\\\\w\", after_step_3$area_name))\n\npractice &lt;- step_5(county_practice)\npractice #works \n\n# A tibble: 31,450 × 7\n   area_name   state STCOU name       enrollment  year measurement\n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 Autauga, AL AL    01001 EDU010197D       8099  1997 EDU0101    \n 2 Autauga, AL AL    01001 EDU010198D       8211  1998 EDU0101    \n 3 Autauga, AL AL    01001 EDU010199D       8489  1999 EDU0101    \n 4 Autauga, AL AL    01001 EDU010200D       8912  2000 EDU0102    \n 5 Autauga, AL AL    01001 EDU010201D       8626  2001 EDU0102    \n 6 Autauga, AL AL    01001 EDU010202D       8762  2002 EDU0102    \n 7 Autauga, AL AL    01001 EDU015203D       9105  2003 EDU0152    \n 8 Autauga, AL AL    01001 EDU015204D       9200  2004 EDU0152    \n 9 Autauga, AL AL    01001 EDU015205D       9559  2005 EDU0152    \n10 Autauga, AL AL    01001 EDU015206D       9652  2006 EDU0152    \n# ℹ 31,440 more rows\n\n\n\n\nStep 6 function (division):\n\nstep_6_division &lt;- function(data){\n  title_case_data &lt;- data |&gt;\n    # first we mutate to str_to_title and render that:\n    mutate(area_name = str_to_title(area_name))\n\n# fixing division data to reflect error condition \n  division_data &lt;- title_case_data |&gt;\n    mutate(division = case_when(\n      \n     area_name %in% c(\"Connecticut\", \"Maine\", \"Massachusetts\", \n                      \"New Hampshire\", \"Rhode Island\", \"Vermont\") \n     ~ \"New England\",\n     \n    area_name %in% c(\"New Jersey\", \"New York\", \"Pennsylvania\") \n    ~ \"Middle Atlantic\",\n    \n    area_name %in% c(\"Illinois\", \"Indiana\", \"Michigan\", \"Ohio\", \"Wisconsin\") \n    ~ \"East North Central\",\n    \n    area_name %in% c(\"Iowa\", \"Kansas\", \"Minnesota\", \"Missouri\", \"Nebraska\", \n                     \"North Dakota\", \"South Dakota\") \n    ~ \"West North Central\",\n    \n    area_name %in% c(\"Delaware\", \"Florida\", \"Georgia\", \"Maryland\", \n                     \"North Carolina\", \"South Carolina\", \"Virginia\", \n                     \"District of Columbia\", \"West Virginia\")\n    ~ \"South Atlantic\",\n    \n    area_name %in% c(\"Alabama\", \"Kentucky\", \"Mississippi\", \"Tennessee\") \n    ~ \"East South Central\",\n    \n    area_name %in% c(\"Arkansas\", \"Louisiana\", \"Oklahoma\", \"Texas\") \n    ~ \"West South Central\",\n    \n    area_name %in% c(\"Arizona\", \"Colorado\", \"Idaho\", \"Montana\", \"Nevada\", \n                     \"New Mexico\", \"Utah\", \"Wyoming\")\n    ~ \"Mountain\",\n    \n    area_name %in% c(\"Alaska\", \"California\", \"Hawaii\", \"Oregon\", \"Washington\") \n    ~ \"Pacific\",\n    \n  TRUE ~ \"ERROR\")) |&gt;\n  #adjusting columns to look better\n  select(area_name, division, STCOU, everything())\n  return(division_data)\n}\n\n\n\nTesting function step 6:\n\nstate &lt;- subset(after_step_3, !(grepl(pattern = \", \\\\w\\\\w\", after_step_3$area_name)))\npractice_step_6 &lt;- step_6_division(state)\npractice_step_6\n\n# A tibble: 530 × 7\n   area_name     division STCOU name       enrollment  year measurement\n   &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 United States ERROR    00000 EDU010197D   44534459  1997 EDU0101    \n 2 United States ERROR    00000 EDU010198D   46245814  1998 EDU0101    \n 3 United States ERROR    00000 EDU010199D   46368903  1999 EDU0101    \n 4 United States ERROR    00000 EDU010200D   46818690  2000 EDU0102    \n 5 United States ERROR    00000 EDU010201D   47127066  2001 EDU0102    \n 6 United States ERROR    00000 EDU010202D   47606570  2002 EDU0102    \n 7 United States ERROR    00000 EDU015203D   48506317  2003 EDU0152    \n 8 United States ERROR    00000 EDU015204D   48693287  2004 EDU0152    \n 9 United States ERROR    00000 EDU015205D   48978555  2005 EDU0152    \n10 United States ERROR    00000 EDU015206D   49140702  2006 EDU0152    \n# ℹ 520 more rows\n\n\n\n\nStep 4 function:\n\nstep_4_5_6 &lt;- function(data){\n  #first we need to take the data and split it into \n  #two different data sets (county and state)\n  county &lt;- subset(data, grepl(pattern = \", \\\\w\\\\w\", data$area_name))\n  state &lt;- subset(data, !(grepl(pattern = \", \\\\w\\\\w\", data$area_name)))\n  # now we apply both functions\n  county_edit &lt;- step_5(county)\n  state_edit &lt;- step_6_division(state)\n  # return both data sets\n  return(list(\"county_data\" = county_edit, \"state_data\" = state_edit))\n}\n\n\n\nTesting step 4, 5, 6 by using after step 3:\n\nfinal_data_practice &lt;- step_4_5_6(after_step_3)\nattributes(final_data_practice)\n\n$names\n[1] \"county_data\" \"state_data\" \n\nhead(final_data_practice$county_data)\n\n# A tibble: 6 × 7\n  area_name   state STCOU name       enrollment  year measurement\n  &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n1 Autauga, AL AL    01001 EDU010197D       8099  1997 EDU0101    \n2 Autauga, AL AL    01001 EDU010198D       8211  1998 EDU0101    \n3 Autauga, AL AL    01001 EDU010199D       8489  1999 EDU0101    \n4 Autauga, AL AL    01001 EDU010200D       8912  2000 EDU0102    \n5 Autauga, AL AL    01001 EDU010201D       8626  2001 EDU0102    \n6 Autauga, AL AL    01001 EDU010202D       8762  2002 EDU0102    \n\nhead(final_data_practice$state_data)\n\n# A tibble: 6 × 7\n  area_name     division STCOU name       enrollment  year measurement\n  &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n1 United States ERROR    00000 EDU010197D   44534459  1997 EDU0101    \n2 United States ERROR    00000 EDU010198D   46245814  1998 EDU0101    \n3 United States ERROR    00000 EDU010199D   46368903  1999 EDU0101    \n4 United States ERROR    00000 EDU010200D   46818690  2000 EDU0102    \n5 United States ERROR    00000 EDU010201D   47127066  2001 EDU0102    \n6 United States ERROR    00000 EDU010202D   47606570  2002 EDU0102    \n\n\n\n\nWriting wrapper function\n\nmy_wrapper &lt;- function(url, default_var_name = \"enrollment\"){\n# first we read in the csv\n  result &lt;- read_csv(url) |&gt;\n# then we apply steps 1 and 2\n    steps_1_and_2(value = default_var_name)|&gt;\n# now we apply step 3\n    step_3() |&gt;\n# finally steps 4,5,6 which returns a list of state and county data\n    step_4_5_6()\nreturn(result)\n}\n\n\n\nTesting wrapper function\n\n# to use this function you provide a url and the default variable name\ndata_b_test &lt;- my_wrapper(url = \"./data/EDU01b.csv\", default_var_name = \"testing\" )\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010197N1, EDU010197N2, EDU010198N1, EDU010198...\ndbl (20): EDU010197F, EDU010197D, EDU010198F, EDU010198D, EDU010199F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_b_test\n\n$county_data\n# A tibble: 31,450 × 7\n   area_name   state STCOU name       testing  year measurement\n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 Autauga, AL AL    01001 EDU010197D    8099  1997 EDU0101    \n 2 Autauga, AL AL    01001 EDU010198D    8211  1998 EDU0101    \n 3 Autauga, AL AL    01001 EDU010199D    8489  1999 EDU0101    \n 4 Autauga, AL AL    01001 EDU010200D    8912  2000 EDU0102    \n 5 Autauga, AL AL    01001 EDU010201D    8626  2001 EDU0102    \n 6 Autauga, AL AL    01001 EDU010202D    8762  2002 EDU0102    \n 7 Autauga, AL AL    01001 EDU015203D    9105  2003 EDU0152    \n 8 Autauga, AL AL    01001 EDU015204D    9200  2004 EDU0152    \n 9 Autauga, AL AL    01001 EDU015205D    9559  2005 EDU0152    \n10 Autauga, AL AL    01001 EDU015206D    9652  2006 EDU0152    \n# ℹ 31,440 more rows\n\n$state_data\n# A tibble: 530 × 7\n   area_name     division STCOU name        testing  year measurement\n   &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 United States ERROR    00000 EDU010197D 44534459  1997 EDU0101    \n 2 United States ERROR    00000 EDU010198D 46245814  1998 EDU0101    \n 3 United States ERROR    00000 EDU010199D 46368903  1999 EDU0101    \n 4 United States ERROR    00000 EDU010200D 46818690  2000 EDU0102    \n 5 United States ERROR    00000 EDU010201D 47127066  2001 EDU0102    \n 6 United States ERROR    00000 EDU010202D 47606570  2002 EDU0102    \n 7 United States ERROR    00000 EDU015203D 48506317  2003 EDU0152    \n 8 United States ERROR    00000 EDU015204D 48693287  2004 EDU0152    \n 9 United States ERROR    00000 EDU015205D 48978555  2005 EDU0152    \n10 United States ERROR    00000 EDU015206D 49140702  2006 EDU0152    \n# ℹ 520 more rows\n\n\n\n\nApplying the function to both data sets, resulting in two lists\n\nlist_data_a &lt;- my_wrapper(url = \"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\",\n                          default_var_name = \"enrollment\" )\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010187N1, EDU010187N2, EDU010188N1, EDU010188...\ndbl (20): EDU010187F, EDU010187D, EDU010188F, EDU010188D, EDU010189F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist_data_b &lt;- my_wrapper(url = \"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\",\n                          default_var_name = \"enrollment\" )\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010197N1, EDU010197N2, EDU010198N1, EDU010198...\ndbl (20): EDU010197F, EDU010197D, EDU010198F, EDU010198D, EDU010199F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCreating a function that combines the data sets\n\ncombine &lt;- function(data1, data2){\n  # combine county data\n  county_combined &lt;- bind_rows(data1$county_data, data2$county_data)\n  # combine state data\n  state_combined &lt;- bind_rows(data1$state_data, data2$state_data)\n  # return list of combined data\n  return(list(\"county_data\" = county_combined, \n              \"state_data\" = state_combined))\n}\n\napplying function to both lists of data sets\n\nfinal_combined_data &lt;- combine(list_data_a,list_data_b)\nfinal_combined_data\n\n$county_data\n# A tibble: 62,900 × 7\n   area_name   state STCOU name       enrollment  year measurement\n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 Autauga, AL AL    01001 EDU010187D       6829  1987 EDU0101    \n 2 Autauga, AL AL    01001 EDU010188D       6900  1988 EDU0101    \n 3 Autauga, AL AL    01001 EDU010189D       6920  1989 EDU0101    \n 4 Autauga, AL AL    01001 EDU010190D       6847  1990 EDU0101    \n 5 Autauga, AL AL    01001 EDU010191D       7008  1991 EDU0101    \n 6 Autauga, AL AL    01001 EDU010192D       7137  1992 EDU0101    \n 7 Autauga, AL AL    01001 EDU010193D       7152  1993 EDU0101    \n 8 Autauga, AL AL    01001 EDU010194D       7381  1994 EDU0101    \n 9 Autauga, AL AL    01001 EDU010195D       7568  1995 EDU0101    \n10 Autauga, AL AL    01001 EDU010196D       7834  1996 EDU0101    \n# ℹ 62,890 more rows\n\n$state_data\n# A tibble: 1,060 × 7\n   area_name     division STCOU name       enrollment  year measurement\n   &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 United States ERROR    00000 EDU010187D   40024299  1987 EDU0101    \n 2 United States ERROR    00000 EDU010188D   39967624  1988 EDU0101    \n 3 United States ERROR    00000 EDU010189D   40317775  1989 EDU0101    \n 4 United States ERROR    00000 EDU010190D   40737600  1990 EDU0101    \n 5 United States ERROR    00000 EDU010191D   41385442  1991 EDU0101    \n 6 United States ERROR    00000 EDU010192D   42088151  1992 EDU0101    \n 7 United States ERROR    00000 EDU010193D   42724710  1993 EDU0101    \n 8 United States ERROR    00000 EDU010194D   43369917  1994 EDU0101    \n 9 United States ERROR    00000 EDU010195D   43993459  1995 EDU0101    \n10 United States ERROR    00000 EDU010196D   44715737  1996 EDU0101    \n# ℹ 1,050 more rows"
  },
  {
    "objectID": "project1.html#writing-generic-functions-for-plotting-the-summary",
    "href": "project1.html#writing-generic-functions-for-plotting-the-summary",
    "title": "Project 1: Data combination and summarization through functions",
    "section": "Writing generic functions for plotting the summary",
    "text": "Writing generic functions for plotting the summary\n\nPlotting state data with enrollment mean and divison on y-axis and year on x-axis\n\n#writing a function to plot based on state divisions \nplot.state &lt;- function(data, var_name = \"enrollment\"){\n  \n  #creating a temporary object to store edits \n  data_summary &lt;- data |&gt;\n    mutate(year = as.numeric(year)) |&gt;\n    \n    #filtering out error values in division\n    filter(division != \"ERROR\", !is.na(var_name)) |&gt;\n    \n    #grouing by division and year \n    group_by(division, year) |&gt;\n    \n    #summarizing the enrollment means\n    summarise(enroll_mean = mean(get(var_name))) \n  \n  #plotting the data as a line graph\n  data_summary |&gt; \n    \n    ggplot(data_summary |&gt; aes(x = year, \n                               y = enroll_mean, \n                               colour = division)) + \n    #setting the plot as line with additional aesthetic to make the lines look different \n    geom_line(aes(linetype = division), lwd = .75) + \n    #hiding the linetype legend\n    guides(linetype = \"none\") +\n    #changing the labels of x and y axis and the title\n    labs(x = \"Year\", \n         y = \"Enrollment mean\", \n         title = \"Enrollment changes over the years\", \n         colour = \"Division\") +\n    #added to prevent scientific notion in the axis lables\n    scale_y_continuous(labels = label_comma())\n}\n\n#testing the function \nplot.state(data = edu_state, var_name = \"enrollment\")\n\n`summarise()` has grouped output by 'division'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\nTesting on final data set\n\nplot.state(final_combined_data$state_data, var_name = \"enrollment\")\n\n`summarise()` has grouped output by 'division'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\nCounty plot function with:\n\ndata from the state specified or the default\nonly the Area_names from the previous part\n\n\nplot.county &lt;- function(data, state_name = \"AL\", interest = \"top\", \n                        x = \"5\", var_name = \"enrollment\"){\n # first create data set that has areas we are interested in\n  if (interest == \"top\"){\n  summary &lt;- data |&gt;\n  filter(state == state_name) |&gt;\n  group_by(area_name) |&gt;\n  summarise(enroll_mean = mean(get(var_name))) |&gt;\n  arrange(desc(enroll_mean)) |&gt;\n  slice(1:x) |&gt;\n  select(area_name)\n  }\n  else if(interest == \"bottom\"){\n  summary &lt;- data |&gt;\n  filter(state == state_name) |&gt;\n  group_by(area_name) |&gt;\n  summarise(enroll_mean = mean(get(var_name))) |&gt;\n  arrange(enroll_mean) |&gt;\n  slice(1:x) |&gt;\n  select(area_name)\n  }\n# now combine this with original data set to plot values:\n  new &lt;- semi_join(data, summary, by = \"area_name\")\n  ggplot(new |&gt; mutate(year = as.numeric(year)), \n         aes(x = year, \n             y = get(var_name), \n             colour = area_name)) + \n    theme(legend.position=\"bottom\") +\n    geom_line(aes(linetype = area_name), lwd = .65) + \n    guides(linetype = \"none\") +\n    labs(x = \"Year\", \n         y = \"Enrollment\", \n         title = \"Enrollment changes over the years\", \n         colour = \"County\") +\n    #added to prevent scientific notion in the axis lables\n    scale_y_continuous(labels = label_comma())\n  \n}\n\n\n\nTesting the county plot function\n\nplot.county(state = \"NC\", \n            data = final_combined_data$county_data, \n            var_name = \"enrollment\", \n            interest = \"top\", \n            x = 15)"
  },
  {
    "objectID": "project1.html#final-report",
    "href": "project1.html#final-report",
    "title": "Project 1: Data combination and summarization through functions",
    "section": "Final Report",
    "text": "Final Report\n\nRun our data processing function on two enrollment URLs:\n\nlist_data_a &lt;- my_wrapper(\n  url = \"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\", \n  default_var_name = \"enrollment\" )\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010197N1, EDU010197N2, EDU010198N1, EDU010198...\ndbl (20): EDU010197F, EDU010197D, EDU010198F, EDU010198D, EDU010199F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist_data_b &lt;- my_wrapper(\n  url = \"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\", \n  default_var_name = \"enrollment\" )\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, EDU010187N1, EDU010187N2, EDU010188N1, EDU010188...\ndbl (20): EDU010187F, EDU010187D, EDU010188F, EDU010188D, EDU010189F, EDU010...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nRun our data combining function to put these into one object (with two data frames):\n\nfinal_combined_data &lt;- combine(list_data_a,list_data_b)\nfinal_combined_data\n\n$county_data\n# A tibble: 62,900 × 7\n   area_name   state STCOU name       enrollment  year measurement\n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 Autauga, AL AL    01001 EDU010197D       8099  1997 EDU0101    \n 2 Autauga, AL AL    01001 EDU010198D       8211  1998 EDU0101    \n 3 Autauga, AL AL    01001 EDU010199D       8489  1999 EDU0101    \n 4 Autauga, AL AL    01001 EDU010200D       8912  2000 EDU0102    \n 5 Autauga, AL AL    01001 EDU010201D       8626  2001 EDU0102    \n 6 Autauga, AL AL    01001 EDU010202D       8762  2002 EDU0102    \n 7 Autauga, AL AL    01001 EDU015203D       9105  2003 EDU0152    \n 8 Autauga, AL AL    01001 EDU015204D       9200  2004 EDU0152    \n 9 Autauga, AL AL    01001 EDU015205D       9559  2005 EDU0152    \n10 Autauga, AL AL    01001 EDU015206D       9652  2006 EDU0152    \n# ℹ 62,890 more rows\n\n$state_data\n# A tibble: 1,060 × 7\n   area_name     division STCOU name       enrollment  year measurement\n   &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1 United States ERROR    00000 EDU010197D   44534459  1997 EDU0101    \n 2 United States ERROR    00000 EDU010198D   46245814  1998 EDU0101    \n 3 United States ERROR    00000 EDU010199D   46368903  1999 EDU0101    \n 4 United States ERROR    00000 EDU010200D   46818690  2000 EDU0102    \n 5 United States ERROR    00000 EDU010201D   47127066  2001 EDU0102    \n 6 United States ERROR    00000 EDU010202D   47606570  2002 EDU0102    \n 7 United States ERROR    00000 EDU015203D   48506317  2003 EDU0152    \n 8 United States ERROR    00000 EDU015204D   48693287  2004 EDU0152    \n 9 United States ERROR    00000 EDU015205D   48978555  2005 EDU0152    \n10 United States ERROR    00000 EDU015206D   49140702  2006 EDU0152    \n# ℹ 1,050 more rows\n\n\n\n\nUse the plot function on the state data frame:\n\nplot.state(data = final_combined_data$state_data, \n           var_name = \"enrollment\")\n\n`summarise()` has grouped output by 'division'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\nUse the plot function on the county data frame:\n\nSpecifying the state to be “NC”, the group being the top, the number looked at being 20\n\n\nplot.county(state = \"NC\", \n            data = final_combined_data$county_data, \n            interest = \"top\", \n            x = 20)\n\n\n\n\n\n\n\n\n– Specifying the state to be “SC”, the group being the bottom, the number looked at being 7\n\nplot.county(state = \"SC\", \n            data = final_combined_data$county_data, \n            interest = \"bottom\", \n            x = 7)\n\n\n\n\n\n\n\n\n– Once without specifying anything (defaults used)\n\nplot.county(data = final_combined_data$county_data )\n\n\n\n\n\n\n\n\n– Once specifying the state to be “PA”, the group being the top, the number looked at being 8\n\nplot.county(state = \"PA\", \n            data = final_combined_data$county_data, \n            var_name = \"enrollment\", \n            interest = \"top\", \n            x = 8)\n\n\n\n\n\n\n\n\n\n\nReading similar data sets and applying our functions:\n\nlist_data_pst01a &lt;- my_wrapper(\n  url = \"https://www4.stat.ncsu.edu/~online/datasets/PST01a.csv\", \n  default_var_name = \"enrollment\" )\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, PST015171N1, PST015171N2, PST015172N1, PST015172...\ndbl (20): PST015171F, PST015171D, PST015172F, PST015172D, PST015173F, PST015...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist_data_pst01b &lt;- my_wrapper(\n  url = \"https://www4.stat.ncsu.edu/~online/datasets/PST01b.csv\", \n  default_var_name = \"enrollment\" )\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, PST025182N1, PST025182N2, PST025183N1, PST025183...\ndbl (20): PST025182F, PST025182D, PST025183F, PST025183D, PST025184F, PST025...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist_data_pst01c &lt;- my_wrapper(\n  url = \"https://www4.stat.ncsu.edu/~online/datasets/PST01c.csv\", \n  default_var_name = \"enrollment\" )\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, PST035191N1, PST035191N2, PST035192N1, PST035192...\ndbl (20): PST035191F, PST035191D, PST035192F, PST035192D, PST035193F, PST035...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist_data_pst01d &lt;- my_wrapper(\n  url = \"https://www4.stat.ncsu.edu/~online/datasets/PST01d.csv\", \n  default_var_name = \"enrollment\" )\n\nRows: 3198 Columns: 42\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Area_name, STCOU, PST045200N1, PST045200N2, PST045201N1, PST045201...\ndbl (20): PST045200F, PST045200D, PST045201F, PST045201D, PST045202F, PST045...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCombine all 4 data sets:\n\npre_final_combined_data_ab &lt;- combine(list_data_pst01a,list_data_pst01b)\npre_final_combined_data_cd &lt;- combine(list_data_pst01c,list_data_pst01d)\nfinal_combined_data_pst &lt;- combine(pre_final_combined_data_ab,pre_final_combined_data_cd)\n\n\n\nUse the plot function on the state data frame:\n\nplot.state(data = final_combined_data_pst$state_data, \n           var_name = \"enrollment\")\n\n`summarise()` has grouped output by 'division'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\nUse the plot function on the county data frame:\n\nSpecifying the state to be “CA”, the group being the top, the number looked at being 15\n\n\nplot.county(state = \"CA\", \n            data = final_combined_data_pst$county_data, \n            interest = \"top\", \n            x = 15)\n\n\n\n\n\n\n\n\n\nOnce specifying the state to be “TX”, the group being the top, the number looked at being 4\n\n\nplot.county(state = \"TX\", \n            data = final_combined_data_pst$county_data, \n            interest = \"top\", \n            x = 4)\n\n\n\n\n\n\n\n\n– Once without specifying anything (defaults used)\n\nplot.county(data = final_combined_data_pst$county_data)\n\n\n\n\n\n\n\n\n– Once specifying the state to be “NY”, the group being the top, the number looked at being 10\n\nplot.county(state = \"NY\", \n            data = final_combined_data_pst$county_data, \n            interest = \"top\", \n            x = 10)"
  }
]