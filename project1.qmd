---
title: ""
author: Laraib Azmat
date: June 06, 2024
format: html
---

```{r library read in}
library(tidyverse)
library(readr)
library(readxl)
```
## Data read in for 1st component
```{r}
#reading in data from data folder
edu_data <- read_csv("./data/EDU01a.csv")

#reading specs of table to get column names
spec(edu_data)
```
```{r}
#saving edits as a new object
edu_edit <- edu_data |>
  #selecting only area_name, STCOU, and the columns that end with "D"
  select(Area_name, STCOU, ends_with("D")) |>
  #printing to see the results 
  print()|>
  #converting to a long form and moving the results to an "enlorment" column
  pivot_longer(cols = 3:12, 
               values_to = "enlorment")
#printing to see the results
edu_edit
```
```{r}
#overwriting the object to save edits
edu_edit <- edu_edit |>
  #changing the values to reflect years using the data information sheet
  mutate( year = case_when(
    name == "EDU010187D" ~ 1987, 
    name == "EDU010188D" ~ 1988, 
    name == "EDU010189D" ~ 1989, 
    name == "EDU010190D" ~ 1990, 
    name == "EDU010191D" ~ 1991, 
    name == "EDU010192D" ~ 1992, 
    name == "EDU010193D" ~ 1993, 
    name == "EDU010194D" ~ 1994, 
    name == "EDU010195D" ~ 1995, 
    name == "EDU010196D" ~ 1996
  )) |>
  #creating a new column to represent which measurement grabbed
  mutate(measurement = substr(edu_edit$name, 1, 7))

#printing to see the results
edu_edit
```

```{r}
#creating new data set with county level data 
edu_county <- subset(edu_edit, grepl(pattern = ", \\w\\w", edu_edit$Area_name))

#overwriting the county object to save edits 
edu_county <- edu_county |>
  #adding a new column to represent county's state
  mutate(state = str_extract(edu_county$Area_name, " \\w\\w")) |>
  #adjusting columns to look better
  select(Area_name, state, STCOU, name, measurement, year, everything())

#changing the class of the county data set
class(edu_county) <- c("county", class(edu_county))

#printing the data set
edu_county
```

```{r}
#creating new data set with state level data
edu_state <- subset(edu_edit, !(grepl(pattern = ", \\w\\w", edu_edit$Area_name)))

#adjusting area_name values to easily identify the region
edu_state$Area_name <- str_to_title(edu_state$Area_name)

#adding new column to reflect division of the state
edu_state$division <- as.character(setNames(state.division, state.name)[edu_state$Area_name])

#overwriting the state object to save edits 
edu_state <- edu_state |>
#fixing division data to reflect error condition and  
    mutate(division = case_when(
      Area_name == "District Of Columbia" ~ "South Atlantic", 
      is.na(division) ~ "ERROR"
      )) |>
  #adjusting columns to look better
  select(Area_name, division, STCOU, everything())

#printing the data set
edu_state
```
